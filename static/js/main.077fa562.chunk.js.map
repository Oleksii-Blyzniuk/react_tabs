{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","tabSelected","isSelectedTab","find","tab","id","className","map","classNames","href","onClick","handleClick","title","content","App","useState","setId","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAA0B,SAAC,GAIjC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEMC,EAAgBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAC7CD,EAAK,GAQV,OACE,mCACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBACEE,UAAWE,IACT,CAAE,YAAaN,EAAcG,KAAOD,EAAIC,KAG1C,UAAQ,MALV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAtBL,SAACN,GACfJ,IAAkBI,EAAIC,IACxBJ,EAAYG,GAoBeO,CAAYP,IAH7B,SAKGA,EAAIQ,SARFR,EAAIC,WAejB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAcW,gBC1CZd,EAAkB,CAC7B,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA+BC,mBAAShB,EAAK,GAAGM,IAAhD,mBAAOL,EAAP,KAAsBgB,EAAtB,KAEMd,EAAgBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAC7CD,EAAK,GAEV,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAcU,SAGpC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,YAbc,SAACG,GAAD,OAAkBY,EAAMZ,EAAIC,WCjBlDY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.077fa562.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ninterface Props {\n  id: string;\n  title: string;\n  content: string;\n}\n\ninterface TabType {\n  tabs: Props[];\n  selectedTabId: string;\n  tabSelected: (value: Props) => void;\n}\n\nexport const Tabs: React.FC<TabType> = ({\n  tabs,\n  selectedTabId,\n  tabSelected,\n}) => {\n  const isSelectedTab = tabs.find(tab => tab.id === selectedTabId)\n    || tabs[0];\n\n  const handleClick = (tab: Props) => {\n    if (selectedTabId !== tab.id) {\n      tabSelected(tab);\n    }\n  };\n\n  return (\n    <>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab: Props) => (\n              <li\n                className={classNames(\n                  { 'is-active': isSelectedTab.id === tab.id },\n                )}\n                key={tab.id}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClick(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {isSelectedTab.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\ninterface TabType {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const tabs: TabType[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setId] = useState(tabs[0].id);\n  const tabSelected = (tab: TabType) => setId(tab.id);\n  const isSelectedTab = tabs.find(tab => tab.id === selectedTabId)\n    || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${isSelectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        tabSelected={tabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}